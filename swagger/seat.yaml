paths:
  /seat:
    get:
      tags:
        - Seat
      summary: 좌석 화면 - 예약된 좌석만 전달
      responses:
        200:
          description: 좌석 정보 조회 성공
        500:
          description: 서버 에러
  /seat/check:
    get:
      tags:
        - Seat
      summary: 좌석 선택 - 이미 예약된 좌석이 있는지 확인 (유저)
      parameters:
        - in: query
          name: seats
          schema:
            type: array
            items:
              type: string
              escription: 선택한 좌석 정보 (JSON 문자열로 인코딩된 배열)
          example: '[{"row": "A", "number": 1}, {"row": "A", "number": 2}]을 인코딩해야 함'
          required: true
      responses:
        200:
          description: 좌석 선택 확인 성공
        400:
          description: 올바르지 않은 좌석 정보
        500:
          description: 서버 에러
    post:
      tags:
        - Seat
      summary: 발권된 좌석 확인 (어드민)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scheduleId:
                  type: integer
                seats:
                  type: array
                  items:
                    type: string
                    description: 선택한 좌석 정보 (JSON 문자열로 인코딩된 배열)
              required:
                - scheduleId
                - seats
      responses:
        200:
          description: 잠금 확인 팝업 성공
        400:
          description: 올바르지 않은 공연 일시 ID 또는 좌석 정보
        500:
          description: 서버 에러

  /seat/ticketing:
    get:
      tags:
        - Seat
      summary: 좌석 화면 - 예약된 좌석만 전달
      responses:
        200:
          description: 좌석 정보 조회 성공
        500:
          description: 서버 에러
    patch:
      tags:
        - Seat
      summary: 좌석 선택 - 이미 예약된 좌석이 있는지 확인
      parameters:
        - in: query
          name: seats
          schema:
            type: array
            items:
              type: string
              description: 선택한 좌석 정보 (JSON 문자열로 인코딩된 배열)
          example: '[{"row": "A", "number": 1}, {"row": "A", "number": 2}]을 인코딩해야 함'
          required: true
      responses:
        200:
          description: 좌석 선택 확인 성공
        400:
          description: 올바르지 않은 좌석 정보 / 유저 삭제
        500:
          description: 서버 에러
  /seat/back:
    delete:
      tags:
        - Seat
      summary: 발권 신청에서 뒤로가기
      responses:
        200:
          description: 발권 신청에서 뒤로가기 성공
        400:
          description: 사용자를 찾을 수 없음 / 이미 발권 신청이 완료됨
        500:
          description: 서버 에러
  /seat/realTime:
    get:
      tags:
        - Seat
      summary: 실시간
      parameters:
        - in: query
          name: scheduleId
          schema:
            type: integer
          required: true
      responses:
        200:
          description: 실시간 좌석 정보 조회 성공
        400:
          description: 올바르지 않은 공연 일시 ID
        500:
          description: 서버 에러
  /seat/audience:
    get:
      tags:
        - Seat
      summary: 관객 정보
      parameters:
        - in: query
          name: scheduleId
          schema:
            type: integer
          required: true
        - in: query
          name: seatId
          schema:
            type: integer
          required: true
      responses:
        200:
          description: 관객 정보 조회 성공
        400:
          description: 올바르지 않은 공연 일시 ID 또는 좌석 ID
        500:
          description: 서버 에러
  /seat/lock:
    post:
      tags:
        - Seat
      summary: 실시간 좌석 편집 - 좌석 잠그기
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scheduleId:
                  type: array
                  items:
                    type: integer
                seats:
                  type: array
                  items:
                    type: string
                    description: 선택한 좌석 정보 (JSON 문자열로 인코딩된 배열)
              required:
                - scheduleId
                - seats
      responses:
        200:
          description: 좌석 잠금 성공
        500:
          description: 서버 에러
  /seat/unlock:
    delete:
      tags:
        - Seat
      summary: 실시간 좌석 편집 - 좌석 잠금 해제
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scheduleId:
                  type: array
                  items:
                    type: integer
                seats:
                  type: array
                  items:
                    type: string
                    description: 선택한 좌석 정보 (JSON 문자열로 인코딩된 배열)
              required:
                - scheduleId
                - seats
      responses:
        200:
          description: 좌석 잠금 해제 성공
        500:
          description: 서버 에러
